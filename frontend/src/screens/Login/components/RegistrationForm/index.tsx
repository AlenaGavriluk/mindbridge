import React from 'react';
import styles from './styles.module.scss';
import { connect } from 'react-redux';
import internal from "stream";

export interface IRegistrationFormProps extends IState, IActions {
}

interface IState {
}

interface IActions {
}

const RegistrationForm: React.FC<IRegistrationFormProps> = (
  { children }
) => {

  const toggleShowPassword = (isFirst: boolean) => {
    let input;
    let type;
    let svgButton;

    if (isFirst) {
      input = document.getElementById('password');
      type = input.getAttribute('type');
      svgButton = document.getElementById('viewPasswordButton');
    } else {
      input = document.getElementById('passwordConfirm');
      type = input.getAttribute('type');
      svgButton = document.getElementById('viewConfirmButton');
    }

    switch (type) {
      case 'text': {
        input.setAttribute('type', 'password');
        svgButton.innerHTML = '<svg viewBox="0 0 16 16" fill="none" xmlns="http://www.w3.org/2000/svg">\n' +
                                '<path d="M15.47 7.83C14.8819 6.30882 13.861 4.99331 12.5334 4.04604C11.2058 3.09878 9.62974 2.56129 8 2.5C6.37026 2.56129 4.79419 3.09878 3.4666 4.04604C2.13901 4.99331 1.11808 6.30882 0.530001 7.83C0.490285 7.93985 0.490285 8.06015 0.530001 8.17C1.11808 9.69118 2.13901 11.0067 3.4666 11.954C4.79419 12.9012 6.37026 13.4387 8 13.5C9.62974 13.4387 11.2058 12.9012 12.5334 11.954C13.861 11.0067 14.8819 9.69118 15.47 8.17C15.5097 8.06015 15.5097 7.93985 15.47 7.83V7.83ZM8 12.5C5.35 12.5 2.55 10.535 1.535 8C2.55 5.465 5.35 3.5 8 3.5C10.65 3.5 13.45 5.465 14.465 8C13.45 10.535 10.65 12.5 8 12.5Z" fill="#919193" fill-opacity="0.5"/>\n' +
                                '<path d="M8 5C7.40666 5 6.82664 5.17595 6.33329 5.50559C5.83994 5.83524 5.45543 6.30377 5.22836 6.85195C5.0013 7.40013 4.94189 8.00333 5.05765 8.58527C5.1734 9.16721 5.45912 9.70176 5.87868 10.1213C6.29824 10.5409 6.83279 10.8266 7.41473 10.9424C7.99667 11.0581 8.59987 10.9987 9.14805 10.7716C9.69623 10.5446 10.1648 10.1601 10.4944 9.66671C10.8241 9.17336 11 8.59334 11 8C11 7.20435 10.6839 6.44129 10.1213 5.87868C9.55871 5.31607 8.79565 5 8 5ZM8 10C7.60444 10 7.21776 9.8827 6.88886 9.66294C6.55996 9.44318 6.30362 9.13082 6.15224 8.76537C6.00087 8.39991 5.96126 7.99778 6.03843 7.60982C6.1156 7.22186 6.30608 6.86549 6.58579 6.58579C6.86549 6.30608 7.22186 6.1156 7.60982 6.03843C7.99778 5.96126 8.39992 6.00087 8.76537 6.15224C9.13082 6.30362 9.44318 6.55996 9.66294 6.88886C9.8827 7.21776 10 7.60444 10 8C10 8.53043 9.78929 9.03914 9.41421 9.41421C9.03914 9.78929 8.53043 10 8 10Z" fill="#919193" fill-opacity="0.5"/>\n' +
                              '</svg>\n';
        break;
      }
      case 'password': {
        input.setAttribute('type', 'text');
        svgButton.innerHTML = '<svg viewBox="0 0 16 16" fill="none" xmlns="http://www.w3.org/2000/svg">\n' +
                  '              <path d="M8.00005 2C6.87682 2 5.80061 2.25458 4.80151 2.68042L5.56319 3.44209C6.335 3.16249 7.1532 3 8.00005 3C11.0929 3 13.8727 5.00246 14.9699 8.00006C14.5518 9.1424 13.8869 10.1371 13.0558 10.9347L13.759 11.6379C14.7349 10.697 15.5092 9.51981 15.9733 8.16168C16.009 8.05671 16.009 7.94342 15.9733 7.83845C14.7799 4.34622 11.5758 2 8.00005 2Z" fill="#919193" fill-opacity="0.5"/>\n' +
                  '              <path d="M9.98642 7.86534L10.8882 8.76715C10.9538 8.52082 11.0001 8.26685 11.0001 8.00005C11.0001 6.34574 9.65435 5 8.00001 5C7.73321 5 7.47924 5.04622 7.23291 5.11183L8.13472 6.01364C9.12862 6.08126 9.9188 6.87144 9.98642 7.86534Z" fill="#919193" fill-opacity="0.5"/>\n' +
                  '              <path d="M0.999909 1.70707L3.0274 3.73455C1.68459 4.75008 0.606588 6.14168 0.0267382 7.8385C-0.00891273 7.94348 -0.00891273 8.05676 0.0267382 8.16174C1.22011 11.654 4.42425 14.0002 8 14.0002C9.48642 14.0002 10.8903 13.5634 12.1288 12.836L14.2931 15.0002L15.0001 14.2932L1.70692 1L0.99988 1.70704L0.999909 1.70707ZM8.00003 13.0002C4.90723 13.0002 2.12738 10.9978 1.03019 8.00015C1.57134 6.52153 2.54381 5.31884 3.74111 4.44827L5.55992 6.26707C5.21038 6.75762 4.99998 7.35326 4.99998 8.00012C4.99998 9.65443 6.34569 11.0002 8.00003 11.0002C8.64688 11.0002 9.24253 10.7898 9.73308 10.4402L11.397 12.1042C10.3643 12.6638 9.21405 13.0002 8.00003 13.0002ZM6.28333 6.99051L9.00969 9.71688C8.71221 9.89255 8.36986 10.0002 8.00003 10.0002C6.89697 10.0002 6.00001 9.10321 6.00001 8.00018C6.00001 7.63034 6.10766 7.288 6.28333 6.99051Z" fill="#919193" fill-opacity="0.5"/>\n' +
                  '            </svg>';
        break;
      }
    }
  }

  return (
    <div className={styles.loginForm}>
      <h2 className={styles.title}>Sign Up</h2>
      <form>
        <label htmlFor={"email"}>Name</label>
        <input id={"name"} type="text" placeholder={"Enter your name"} required/>
        <label htmlFor={"surname"}>Surname</label>
        <input id={"surname"} type="text" placeholder={"Enter your surname"} required/>
        <label htmlFor={"nickname"}>Nickname</label>
        <input id={"nickname"} type="text" placeholder={"Enter your nickname"} required/>
        <label htmlFor={"email"}>Email</label>
        <input id={"email"} type="email" placeholder={"Enter your email"} required/>
        <label htmlFor="password">Password</label>
        <div className={styles.passwordWrapper}>
          <input id={"password"} type="password" required className={styles.passwordInput} placeholder={"Enter your password"}/>
          <button id={"viewPasswordButton"} className={styles.showPasswordToggle} onClick={() => toggleShowPassword(true)} type={"button"}>
            <svg viewBox="0 0 16 16" fill="none" xmlns="http://www.w3.org/2000/svg">
              <path d="M15.47 7.83C14.8819 6.30882 13.861 4.99331 12.5334 4.04604C11.2058 3.09878 9.62974 2.56129 8 2.5C6.37026 2.56129 4.79419 3.09878 3.4666 4.04604C2.13901 4.99331 1.11808 6.30882 0.530001 7.83C0.490285 7.93985 0.490285 8.06015 0.530001 8.17C1.11808 9.69118 2.13901 11.0067 3.4666 11.954C4.79419 12.9012 6.37026 13.4387 8 13.5C9.62974 13.4387 11.2058 12.9012 12.5334 11.954C13.861 11.0067 14.8819 9.69118 15.47 8.17C15.5097 8.06015 15.5097 7.93985 15.47 7.83V7.83ZM8 12.5C5.35 12.5 2.55 10.535 1.535 8C2.55 5.465 5.35 3.5 8 3.5C10.65 3.5 13.45 5.465 14.465 8C13.45 10.535 10.65 12.5 8 12.5Z" fill="#919193" fill-opacity="0.5"/>
              <path d="M8 5C7.40666 5 6.82664 5.17595 6.33329 5.50559C5.83994 5.83524 5.45543 6.30377 5.22836 6.85195C5.0013 7.40013 4.94189 8.00333 5.05765 8.58527C5.1734 9.16721 5.45912 9.70176 5.87868 10.1213C6.29824 10.5409 6.83279 10.8266 7.41473 10.9424C7.99667 11.0581 8.59987 10.9987 9.14805 10.7716C9.69623 10.5446 10.1648 10.1601 10.4944 9.66671C10.8241 9.17336 11 8.59334 11 8C11 7.20435 10.6839 6.44129 10.1213 5.87868C9.55871 5.31607 8.79565 5 8 5ZM8 10C7.60444 10 7.21776 9.8827 6.88886 9.66294C6.55996 9.44318 6.30362 9.13082 6.15224 8.76537C6.00087 8.39991 5.96126 7.99778 6.03843 7.60982C6.1156 7.22186 6.30608 6.86549 6.58579 6.58579C6.86549 6.30608 7.22186 6.1156 7.60982 6.03843C7.99778 5.96126 8.39992 6.00087 8.76537 6.15224C9.13082 6.30362 9.44318 6.55996 9.66294 6.88886C9.8827 7.21776 10 7.60444 10 8C10 8.53043 9.78929 9.03914 9.41421 9.41421C9.03914 9.78929 8.53043 10 8 10Z" fill="#919193" fill-opacity="0.5"/>
            </svg>
          </button>
        </div>
        <label htmlFor="passwordConfirm">Confirm password</label>
        <div className={styles.passwordWrapper}>
          <input id={"passwordConfirm"} type="password" required placeholder={"Confirm your password"}/>
          <button id={"viewConfirmButton"} className={styles.showPasswordToggle} onClick={() => toggleShowPassword(false)} type={"button"}>
            <svg viewBox="0 0 16 16" fill="none" xmlns="http://www.w3.org/2000/svg">
              <path d="M15.47 7.83C14.8819 6.30882 13.861 4.99331 12.5334 4.04604C11.2058 3.09878 9.62974 2.56129 8 2.5C6.37026 2.56129 4.79419 3.09878 3.4666 4.04604C2.13901 4.99331 1.11808 6.30882 0.530001 7.83C0.490285 7.93985 0.490285 8.06015 0.530001 8.17C1.11808 9.69118 2.13901 11.0067 3.4666 11.954C4.79419 12.9012 6.37026 13.4387 8 13.5C9.62974 13.4387 11.2058 12.9012 12.5334 11.954C13.861 11.0067 14.8819 9.69118 15.47 8.17C15.5097 8.06015 15.5097 7.93985 15.47 7.83V7.83ZM8 12.5C5.35 12.5 2.55 10.535 1.535 8C2.55 5.465 5.35 3.5 8 3.5C10.65 3.5 13.45 5.465 14.465 8C13.45 10.535 10.65 12.5 8 12.5Z" fill="#919193" fill-opacity="0.5"/>
              <path d="M8 5C7.40666 5 6.82664 5.17595 6.33329 5.50559C5.83994 5.83524 5.45543 6.30377 5.22836 6.85195C5.0013 7.40013 4.94189 8.00333 5.05765 8.58527C5.1734 9.16721 5.45912 9.70176 5.87868 10.1213C6.29824 10.5409 6.83279 10.8266 7.41473 10.9424C7.99667 11.0581 8.59987 10.9987 9.14805 10.7716C9.69623 10.5446 10.1648 10.1601 10.4944 9.66671C10.8241 9.17336 11 8.59334 11 8C11 7.20435 10.6839 6.44129 10.1213 5.87868C9.55871 5.31607 8.79565 5 8 5ZM8 10C7.60444 10 7.21776 9.8827 6.88886 9.66294C6.55996 9.44318 6.30362 9.13082 6.15224 8.76537C6.00087 8.39991 5.96126 7.99778 6.03843 7.60982C6.1156 7.22186 6.30608 6.86549 6.58579 6.58579C6.86549 6.30608 7.22186 6.1156 7.60982 6.03843C7.99778 5.96126 8.39992 6.00087 8.76537 6.15224C9.13082 6.30362 9.44318 6.55996 9.66294 6.88886C9.8827 7.21776 10 7.60444 10 8C10 8.53043 9.78929 9.03914 9.41421 9.41421C9.03914 9.78929 8.53043 10 8 10Z" fill="#919193" fill-opacity="0.5"/>
            </svg>
          </button>
        </div>
        <button type={"submit"} className={styles.submitButton}>Sign In</button>
      </form>
    </div>
  );
};

const mapStateToProps: (state) => IState = state => ({
});

const mapDispatchToProps: IActions = {
};

export default connect(mapStateToProps, mapDispatchToProps)(RegistrationForm);
